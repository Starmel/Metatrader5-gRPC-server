syntax = "proto3";

package metatrader.v1;

import "common.proto";
import "google/protobuf/timestamp.proto";

// Request for getting orders
message OrdersGetRequest {
  // Optional filtering parameters
  optional string symbol = 1;     // Specific symbol name
  optional string group = 2;      // Group filter for symbols
  optional int64 ticket = 3;      // Specific order ticket
}

// Single Order details using primitive types
message Order {
  int64 ticket = 1;
  google.protobuf.Timestamp time_setup = 2;
  int64 time_setup_msc = 3;
  google.protobuf.Timestamp time_done = 4;
  int64 time_done_msc = 5;
  google.protobuf.Timestamp time_expiration = 6;
  int32 type = 7;
  int32 type_time = 8;
  int32 type_filling = 9;
  int32 state = 10;
  int32 magic = 11;
  double volume_current = 12;
  double price_open = 13;
  double stop_loss = 14;
  double take_profit = 15;
  double price_current = 16;
  string symbol = 17;
  string comment = 18;
  string external_id = 19;
}

// Response for getting orders
message OrdersGetResponse {
  repeated Order orders = 1;
  Error error = 2;
}

// Request for getting total number of orders
message OrdersTotalRequest {}

// Response for total number of orders
message OrdersTotalResponse {
  int32 total = 1;
  Error error = 2;
}

// Service definition for Orders
service OrdersService {
  // Get active orders with optional filtering
  rpc GetOrders(OrdersGetRequest) returns (OrdersGetResponse);

  // Get total number of active orders
  rpc GetOrdersTotal(OrdersTotalRequest) returns (OrdersTotalResponse);
}